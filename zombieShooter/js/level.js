var level_data=














        ['R', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'H', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'B', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'B', '.', '.', '.', 'R'],








        ['R', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'B', 'G', 'B', 'B', 'G', 'B', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'B', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'B', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'R'],

        ['R', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'G', '.', '.', '.', '.', '.', '.', '.', 'L', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'L', '.', '.', '.', '.', '.', '.', '.', 'G', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'B', 'B', 'G', 'G', 'B', 'L', '.', '.', 'L', 'B', 'G', 'G', 'B', 'B', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'B', '.', '.', '.', '.', '.', 'B', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'R'],





        ['R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R']];
class PointTile{
    constructor(x,y,TileColor)
    {
        this.x=x;
        this.y=y;
        this.TileColor=TileColor;
    }
}
function LevelManager(gl,material){
    this.gl=gl;
    this.material=material;
    this.TILE_WIDTH=50;
    this._startPlayerpos = new Point(0,0);
    this._zombiStartPos=[];
    this._humanStartPos=[];
    this.level_red = new Sprite(this.gl, "img/red_bricks.png", this.material, {width:this.TILE_WIDTH, height:this.TILE_WIDTH});
    this.level_light= new Sprite(this.gl, "img/light_bricks.png", this.material, {width:this.TILE_WIDTH, height:this.TILE_WIDTH});
    this.level_glass= new Sprite(this.gl, "img/glass.png", this.material, {width:this.TILE_WIDTH, height:this.TILE_WIDTH});
    this.TilePos=[];
    this.initLevel=function(){
        let y=0;
        let x = 0;
        for (let y = 0; y < level_data.length; y++)
        {
            for (let x = 0; x < level_data[y].length; x++) {
                
                switch (level_data[y][x]) {
                    case 'B':
                    case 'R':
                        this.TilePos.push(new PointTile(x * this.TILE_WIDTH, y * this.TILE_WIDTH, 1));
                        break;
                    case 'G':
                        this.TilePos.push(new PointTile(x * this.TILE_WIDTH, y * this.TILE_WIDTH, 2));
                        break;
                    case 'L':
                        this.TilePos.push(new PointTile(x * this.TILE_WIDTH, y * this.TILE_WIDTH, 3));
                        break;
                    case '@':
                        level_data[y][x] = '.';
                        this._startPlayerpos.x = x * this.TILE_WIDTH;
                        this._startPlayerpos.y = y * this.TILE_WIDTH;
                        break;
                    case 'Z':
                        level_data[y][x] = '.';
                        this._zombiStartPos.push(new Point(x * this.TILE_WIDTH, y * this.TILE_WIDTH));
                        break;
                    case 'H':
                        level_data[y][x] = '.';
                        this._humanStartPos.push(new Point(x * this.TILE_WIDTH, y * this.TILE_WIDTH));
                        break;
                    case '.':
                        break;
                }

            }
        }

    };
    this.renderTile=function(element){
        switch(element.TileColor)
        {
            case 1:
            this.level_red.render(new Point(element.x,element.y),new Point(0,0));
            break;
            case 2:
            this.level_glass.render(new Point(element.x,element.y),new Point(0,0));
            break;
            case 3:
            this.level_light.render(new Point(element.x,element.y),new Point(0,0));
            break;   
        }
    };
    this.collideWithLevel=function(agent,AGENT_WIDTH){
        this.collideTilePosition = [];
        let _position = new Point(agent.x, agent.y);

	    //check the four cornors
	    //first cornor
	    this.checkTilePosition(_position.x, _position.y);
	    //second cornor
        this.checkTilePosition(_position.x+AGENT_WIDTH, _position.y);
	    //third cornor
        this.checkTilePosition(_position.x, _position.y+AGENT_WIDTH);
	    //fourth cornor
        this.checkTilePosition(_position.x+AGENT_WIDTH, _position.y+AGENT_WIDTH);

        if (this.collideTilePosition.length === 0)
        {
            return false;
        }
        for (let i = 0; i < this.collideTilePosition.length; i++) {
            this.collideWithTile(this.collideTilePosition[i], AGENT_WIDTH, agent);
        }
        return true;
    };
    this.checkTilePosition=function(x,y){
        let cornerPos = new Point(Math.floor(x/this.TILE_WIDTH),
            Math.floor(y / this.TILE_WIDTH));

	    //if we outside the wall
        if (cornerPos.x < 0 || cornerPos.x >= this.level_width ||
            cornerPos.y < 0 || cornerPos.y >= this.level_height) {
            return;
        }

        if (level_data[cornerPos.y][cornerPos.x] !== '.')
	    {
            this.collideTilePosition.push(new Point(cornerPos.x * this.TILE_WIDTH + this.TILE_WIDTH/2.0,
                cornerPos.y * this.TILE_WIDTH + this.TILE_WIDTH/2.0));
	    }
    };
    this.collideWithWorld= function(bullet)
    {
        let _position = new Point(bullet.x,bullet.y);
        let gridPosition = new Point(0,0);
        gridPosition.x = Math.floor( _position.x / this.TILE_WIDTH);
        gridPosition.y = Math.floor(_position.y / this.TILE_WIDTH);
    
        if (gridPosition.x<0 || gridPosition.x >= level_data[0].length ||
            gridPosition.y<0 || gridPosition.y >= level_data.length)
        {
            return true;
        }
        return level_data[gridPosition.y][gridPosition.x] != '.';
    };
    
    this.collideWithTile=function(tilePos,AGENT_WIDTH,agent){

        let AGENT_RADIUS = AGENT_WIDTH / 2.0;
        let TILE_RADIUS = this.TILE_WIDTH / 2.0;

        let _position = new Point(agent.x, agent.y);

	    let MIN_DISTANCE = AGENT_RADIUS + TILE_RADIUS; ///< minimum distance from center of agent to Tile

        let centerPos = new Point (_position.x + AGENT_RADIUS,
            _position.y + AGENT_RADIUS); ///< Agent position
        let distVec = new Point (centerPos.x - tilePos.x,
            centerPos.y - tilePos.y); ///<Distance vector

	    let xDepth = MIN_DISTANCE - Math.abs(distVec.x);
	    let yDepth = MIN_DISTANCE - Math.abs(distVec.y);


	    if (xDepth > 0 || yDepth > 0)
	    {
		    if (Math.max(xDepth,0.0)<Math.max(yDepth,0.0))
		    {
			    if (distVec.x < 0)
			    {
				    agent.x -= xDepth;
			    }
			    else {
                    agent.x += xDepth;
			    }

		    }
		    else
		    {
			    if (distVec.y < 0)
			    {
                    agent.y -= yDepth;
			    }
			    else {
                    agent.y += yDepth;
			    }
            }
        
        }
    };
}